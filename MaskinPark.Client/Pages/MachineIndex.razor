@page "/MachineIndex"
@inject HttpClient Http

<PageTitle>Machines</PageTitle>

<h1>List of machines</h1>

<p>This component demonstrates fetching data from the server.</p>

<AddMachine Add="AddMachine"></AddMachine>

@if (machines == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var machine in machines)
            {
                <tr>
                    <td>@machine.Id</td>
                    <td>@machine.Name</td>
                    <td>@machine.DataTime</td>
                    <td>@machine.Status</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    private List<Machine> machines = new List<Machine>();

    [Inject]
    public IMaskinParkClient MaskinParkClient { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("Start!!!");
        machines = (await MaskinParkClient.GetAsync())?.ToList();
    }

    private async Task AddMachine(CreateMachine createMachine)
    {
        // var newItem = new CreateItem { Text = text };

        var createdMachine = await MaskinParkClient.PostAsync(createMachine);

        if (createdMachine != null)
            machines.Add(createdMachine);
    }


    /*
      
    private Machine[]? machines;

    protected override async Task OnInitializedAsync()
    {
        machines = await Http.GetFromJsonAsync<Machine[]>("sample-data/weather.json");
    }*/
}